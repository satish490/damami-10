{#
/**
 * @file
 * Bootstrap thakurji theme implementation to display a node.
 *
 * Available variables:
 * - node: The node entity with limited access to object properties and methods.
     Only "getter" methods (method names starting with "get", "has", or "is")
     and a few common methods such as "id" and "label" are available. Calling
     other methods (such as node.delete) will result in an exception.
 * - label: The title of the node.
 * - content: All node items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - author_picture: The node author user entity, rendered using the "compact"
 *   view mode.
 * - metadata: Metadata for this node.
 * - date: Themed creation date field.
 * - author_name: Themed author name field.
 * - url: Direct URL of the current node.
 * - display_submitted: Whether submission information should be displayed.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - node: The current template type (also known as a "theming hook").
 *   - node--type-[type]: The current node type. For example, if the node is an
 *     "Article" it would result in "node--type-article". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - node--view-mode-[view_mode]: The View Mode of the node; for example, a
 *     teaser would result in: "node--view-mode-teaser", and
 *     full: "node--view-mode-full".
 *   The following are controlled through the node publishing options.
 *   - node--promoted: Appears on nodes promoted to the front page.
 *   - node--sticky: Appears on nodes ordered above other non-sticky nodes in
 *     teaser listings.
 *   - node--unpublished: Appears on unpublished nodes visible only to site
 *     admins.
 * - title_attributes: Same as attributes, except applied to the main title
 *   tag that appears in the template.
 * - content_attributes: Same as attributes, except applied to the main
 *   content tag that appears in the template.
 * - author_attributes: Same as attributes, except applied to the author of
 *   the node tag that appears in the template.
 * - title_prefix: Additional output populated by modules, intended to be
 *   displayed in front of the main title tag that appears in the template.
 * - title_suffix: Additional output populated by modules, intended to be
 *   displayed after the main title tag that appears in the template.
 * - view_mode: View mode; for example, "teaser" or "full".
 * - teaser: Flag for the teaser state. Will be true if view_mode is 'teaser'.
 * - page: Flag for the full page state. Will be true if view_mode is 'full'.
 * - readmore: Flag for more state. Will be true if the teaser content of the
 *   node cannot hold the main body content.
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_node()
 */
#}


{%
  set classes = [
    'media',
    'media--type-' ~ media.bundle()|clean_class,
    not media.isPublished() ? 'media--unpublished',
    view_mode ? 'media--view-mode-' ~ view_mode|clean_class,
  ]
%}

<div class="temple-details-page">
  <h1 class="node-title">{{ node.title.value }}</h1>
  <div id="carouselExampleIndicators" class="wrapper-image carousel slide carousel-fade" data-bs-ride="carousel">
    <div class="carousel-inner">

      {# {% set img = content.field_upload_image %} #}
      {% set z = 0 %}
      {% for image in node.field_upload_image %}
        <div class="carousel-item">
          {{ content.field_upload_image[z] }}
        </div>
        {% set z = z + 1 %}
      {% endfor %}

    </div>

    <div class="carousel-indicators">
      {% set i = -1 %}
      {% set j = 0 %}
      {% for image in node.field_upload_image %}
        {% if ( image | length > 1 ) %}
          {% set i = i + 1 %}
          {% set j = j + 1 %}
          <button type="button" data-bs-target="#carouselExampleIndicators" data-bs-slide-to="{{i}}" aria-label="Slide {{j}}"></button>
        {% endif %}
      {% endfor %}
    </div>
  </div>

  <div class="temple-page">

    <div class="information-block">
        {% if node.body.value|raw %}
      <div class="temple-des">{{ node.body.value|raw }}</div>
      {% endif %}
    </div>

    <table class="temple-table" data-aos="flip-left" data-aos-easing="ease-out-cubic" data-aos-duration="2000">
      <tr>
        <th colspan="2" style="color: #008000; background:#ffcc33;">Information Details</th>
      </tr>

      {% if node.field_founder.value %}
      <tr>
        <th>{{ node.field_founder.fieldDefinition.label }}:</th>
        <td>{{ node.field_founder.value }}</td>
      </tr>
      {% endif %}

      {% if node.field_founded.value %}
      <tr>
        <th>{{ node.field_founded.fieldDefinition.label }}:</th>
        <td>{{ node.field_founded.value }}</td>
      </tr>
      {% endif %}

      {% if node.field_organized_by.value %}
      <tr>
        <th>{{ content.field_organized_by['#title'] }}</th>
        <td>{{ node.field_organized_by.value }}</td>
      </tr>
      {% endif %}

      {% if node.field_dedicated_to.value %}
      <tr>
        <th>{{ content.field_dedicated_to['#title'] }}:</th>
        <td>{{ node.field_dedicated_to.value }}</td>
      </tr>
      {% endif %}

      {% if node.field_photography.value %}
      <tr>
        <th>{{ content.field_photography['#title'] }}:</th>
        <td> {{ node.field_photography.value }}</td>
      </tr>
      {% endif %}

      {% if node.field_free_entry.value %}
      <tr>
        <th>{{ content.field_free_entry['#title'] }}:</th>
        <td>{{ node.field_free_entry.value }}</td>
      </tr>
      {% endif %}

      {% if node.field_address.value %}
      <tr>
        <th>{{ content.field_address['#title'] }}:</th>
        <td>{{ node.field_address.value }}</td>
      </tr>
      {% endif %}

      {% if node.field_road.value %}
      <tr>
        <th>{{ content.field_road['#title'] }}:</th>
        <td>{{ node.field_road.value }}</td>
      </tr>
      {% endif %}

      {% if node.field_nearest_railway.value %}
      <tr>
        <th>{{ content.field_nearest_railway['#title'] }}:</th>
        <td>{{ node.field_nearest_railway.value }}</td>
      </tr>
      {% endif %}

      {% if node.field_air.value %}
      <tr>
        <th>{{ content.field_air['#title'] }}:</th>
        <td>{{ node.field_air.value }}</td>
      </tr>
      {% endif %}

      {% if node.field_location_map.value %}
      <tr>
        <th>{{ content.field_location_map['#title'] }}:</th>
        <td>{{ content.field_location_map }}</td>
      </tr>
      {% endif %}
    </table>
    
  </div>

</div>

